name: Build and Test

# This workflow will run on master branch and on any pull requests targeting master
on:
  push:
    branches:
      - master
    tags: []
  pull_request:
  
jobs:
          
  golangci:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Check out code
        uses: actions/checkout@v3
      - name: Lint Go Code
        uses: golangci/golangci-lint-action@v3

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Check out code
        uses: actions/checkout@v3

      - name: Run unit Tests.
        run: go test -cover -race -vet=off ./...
      
  GitFlow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Check Gitflow master
        run: if [[ ${{ github.event.pull_request.base.ref }} == "master" ]]; 
             then if [[ ${{ startsWith(github.event.pull_request.head.ref, 'release')}} == "false" ]]; 
             then echo "'hotfix' prefix required for merge in master"; 
             exit 1; 
             fi; 
             fi 

      - name: Check Base release
        if: ${{ github.event.pull_request.base.ref == 'release' }}
        run: echo "Is release" 

      - name: Check Base develop
        if: ${{ github.event.pull_request.base.ref == 'develop' }}
        run: echo "Is develop" 

      - name: Check prefix release
        if: ${{ startsWith(github.event.pull_request.head.ref, 'release') }}
        run: echo ${{ github.event.pull_request.base.ref }}

      - name: Check prefix feature
        if: ${{ startsWith(github.event.pull_request.head.ref, 'feature') }}
        run: echo ${{ github.event.pull_request.base.ref }}

      - name: Check prefix hotfix
        if: ${{ startsWith(github.event.pull_request.head.ref, 'hotfix') }}
        run: echo ${{ github.event.pull_request.base.ref }}


  build:
    name: Build
    runs-on: ubuntu-latest 
    needs: [golangci, test]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Check out code
        uses: actions/checkout@v3

      - name: Build
        run: go build -v ./...